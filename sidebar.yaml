- sensor:
    - unique_id: sidebar
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          {% set ampm = now().strftime('%p') %}          
          <span class="time">
            {{ hours }}<span class="time-colon">:</span>{{ minutes }}
          </span>
        date: >
          <font color='#6a7377'><b>
          {%- if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
          {%- set days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] %}
          {%- set months = ['January', 'February', 'March', 'April', 'May', 'June', 
          'July', 'August', 'September', 'October', 'November', 'December'] %}
            {{- days[now().weekday()] }}<br>
            {{- strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
          {%- endif -%}
          </b></font>
        greet: >
          <b>
          {%- set time = now().hour %}
          {%- if time <= 1 -%} Good Night
          {%- elif time <= 3 -%} Good Night
          {%- elif time <= 5 -%} Good Morning
          {%- elif time <= 7 -%} Good Morning
          {%- elif time <= 9 -%} Good Morning
          {%- elif time <= 10 -%} Good Morning
          {%- elif time <= 12 -%} Good Morning
          {%- elif time <= 13 -%} Good Afternoon
          {%- elif time <= 15 -%} Good Afternoon
          {%- elif time <= 17 -%} Good Evening
          {%- elif time <= 19 -%} Good Evening
          {%- elif time <= 22 -%} Good Night
          {%- elif time <= 23 -%} Good Night
          {%- else %} Good Evening
          {%- endif -%}
          </b>
        active: >
          <b>
          {% set lights = [
            states.light.office,
            states.light.office_lamp,
            states.switch.strip_lights,
            states.light.keylights,                   
            states.light.bedroom_light_switch,
            states.light.chase_bedroom_light_switch,
            states.light.lounge_room_light_switch,
            states.light.philips_hue_go,
            states.light.kitchen_light_switch,
            states.light.dining_light_switch,
            states.light.hall_light_switch,
            states.light.front_door_light_switch_2,
            states.light.bathroom_dimmer_light,
            states.switch.laundry_light,
            states.switch.outdoor_spotlights
          ] %}

          {% set devices = [
            states.media_player.office_tv,
            states.media_player.lounge_room_tv,
            states.media_player.bedroom_tv,
            states.switch.bathroom_light_switch_right,
            states.media_player.htpc_2,
            states.media_player.lounge,
            states.media_player.bathroom,
            states.media_player.media,
            states.media_player.kitchen_display,
            states.media_player.kitchen,
            states.media_player.spotify_trent_braidner            
          ] %}

          {% set lights_on = lights | selectattr('state','eq','on') | list %}
          {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          {% set devices_on = devices | selectattr('state','search','(on|cool|fan_only|playing)') | list %}
          {% set devices_name = devices_on | map(attribute='name') | join(', ') %}

          {% if (lights_on | length == 0) and (devices_on | length > 0) %}
            {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} are on

          {% elif (lights_on | length == 1) and (devices_on | length == 1) %}
            {{ lights_name }} and {{devices_name }} are on

          {% elif (lights_on | length == 1) and (devices_on | length > 1) %}
            {{ lights_name }}, {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} are on

          {% elif (lights_on | length > 1) and (devices_on | length == 1) %}
            {{ lights_on | length }} lights and {{ devices_name }} are on

          {% elif (lights_on | length > 1) and (devices_on | length > 1) %}
            {{ lights_on | length }} lights, {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} are on

          {% elif (lights_on | length == 1) and (devices_on | length == 0) %}
            {{ lights_name }} are on

          {% elif (lights_on | length > 1) and (devices_on | length == 0) %}
            {{ lights_on | length }} lights are on

          {% else %}
            <font color='#6a7377'>Everything is off</font>
          {% endif %}
          </b>



        # mailbox: >
        #   {% set mailbox = states('sensor.mailbox') %}
        #   {% if mailbox | int(default=0) > 0 %}
        #     {{ '\U0001F4EC' }} <font color='#6a7377'><b>Brevlåda ({{ mailbox }})</b></font>
        #   {% endif %}
        vacuum: |
          {% set entity_id = 'vacuum.roborock_s7' %}
          {%- if is_state(entity_id, 'cleaning') -%}
            <b>Vacuuming</b>
          {%- elif is_state(entity_id, 'returning') -%}
            <b>Vacuuming is done</b>
          {%- endif %}
        weather: |
          {%- set temperature = states('sensor.wandin_current_temp') %}
          {%- set apparent = states('sensor.coldstream_temp_feels_like') | round %}
          {%- set precip = states('sensor.wandin_north_rain_chance_0') | round %}
          {% if not is_state('sensor.coldstream_temp', 'unknown') %}
            {%- if temperature | float(default=0) <= 0.0 -%}
              It is {{ temperature }}° with {{ precip }}% chance of rain {{'\u2744\uFE0F'}}
            {%- elif temperature | float(default=0) > 0.0 -%} 
              It is {{ temperature }}° with {{ precip }}% chance of rain {{ '\u2614\uFE0F' if precip > 30 }}
            {%- endif %}
          {%- else %}
            Unable to load weather information ...
          {%- endif %}
        # laundry: >
        #   {% set start_time = state_attr('calendar.tvatta', 'start_time') %}
        #   {% if start_time != None %}
        #     {% set time = as_timestamp(start_time) | timestamp_custom('%H:%M') %}
        #     {% set hours = as_timestamp(start_time) | timestamp_custom('%H') | int(default=0) / 24 %}
        #     {% set count = (as_timestamp(start_time) - as_timestamp(now())) / 86400 - hours %}
        #     {% set day = strptime(start_time, '%Y-%m-%d %H:%M:%S').strftime('%A')
        #     | replace('Monday', 'Måndag')
        #     | replace('Tuesday', 'Tisdag')
        #     | replace('Wednesday', 'Onsdag')
        #     | replace('Thursday', 'Torsdag')
        #     | replace('Friday', 'Fredag')
        #     | replace('Saturday', 'Lördag')
        #     | replace('Sunday', 'Söndag') %}
        #     {% if count <= 0.0 %}
        #       {{'\U0001F4A6'}} Tvätt idag {{ time }}
        #     {% elif count <= 1.0 %}
        #       Tvätt imorgon klockan {{ time }}
        #     {% elif count <= 2.0 %}
        #       Tvätt i övermorgon klockan {{ time }}
        #     {% else %}
        #       Tvätt om {{ (count + hours) | round }} dagar på {{ day }} kl {{ time }}
        #     {% endif %}
        #   {% endif %}
        battery: |
          {% set entities = states.sensor 
            | selectattr('entity_id', 'search', 'battery')
            | rejectattr('entity_id', 'search', 'iphone')
            | rejectattr('entity_id', 'search', 'icon')
            | map(attribute = 'entity_id') | list %}
          {%- for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
          'unavailable' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
            {%- if loop.first %} {{-'\u26A0\uFE0F'}} Battery {% else %}, {% endif -%}
            {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
          {%- endfor %}
        calendar: |
          {%- set start_time = state_attr('calendar.trent_and_caitlyn', 'start_time') %}
          {%- set end_time = state_attr('calendar.trent_and_caitlyn', 'end_time') %}
          {%- set calmessage = state_attr('calendar.trent_and_caitlyn', 'message') %}
          {% if start_time != None %}
            {%- set time = as_timestamp(start_time) | timestamp_custom('%H:%M') %}
            {%- set time_end = as_timestamp(end_time) | timestamp_custom('%H:%M') %}
            {%- set hours = as_timestamp(start_time) | timestamp_custom('%H') | int(default=0) / 24 %}
            {%- set count = (as_timestamp(start_time) - as_timestamp(now())) / 86400 - hours %}
            {%- set day = strptime(start_time, '%Y-%m-%d %H:%M:%S').strftime('%A')  %}
            {%- if count <= 0.0 -%}
              {{'\U0001F5D3'}} Today between {{ time }}-{{ time_end }} - {{ calmessage }}
            {%- elif count <= 1.0 -%}
              Tomorrow between {{ time }}-{{ time_end }} - {{ calmessage }}
            {%- elif count <= 2.0 -%}
              Day after tomorrow between {{ time }}-{{ time_end }} - {{ calmessage }}
            {%- else -%}
              About {{ (count + hours) | round }} on {{ day }} between {{ time }}-{{ time_end }}
            {%- endif %}
          {%- endif %}
        # nas: |
        #   {% if is_state('binary_sensor.nas_internet_access', 'off') -%}
        #     {{-'\u26A0\uFE0F'}} Internet is Offline
        #   {%- endif %}          
