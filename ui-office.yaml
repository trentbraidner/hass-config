button_card_templates:
  !include_dir_merge_named button_card_templates

views:
  - type: custom:grid-layout
    title: Office
    layout:
      #default
      margin: 0
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .       .       ."
        "sidebar  office  scenes  home    ."
        "sidebar  music       other  house  ."
        "sidebar  footer      footer  footer  ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ." 
            ".  office  scenes   ."
            ".  home      music   ."
            ".  other      house     ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .       ."
            "sidebar  office  scenes  ."
            "sidebar  home      music  ."
            "sidebar  other      house    ."
            "sidebar  footer      footer  ."
            "sidebar  .           .       ."
    cards:

      #extra_styles fix, do not remove
      #also warn if theme is not set

      - type: custom:button-card
        view_layout:
          grid-area: 1 / 2 / 2 / 5
        name: SET THEME TO "tablet" IN PROFILE
        tap_action:
          action: navigate
          navigation_path: /profile
        styles:
          card:
            - display: >
                [[[
                  return hass.themes.theme === 'tablet'
                      ? 'none'
                      : 'initial';
                ]]]
          name:
            - z-index: 1
            - overflow: visible
            - color: red
            - font-weight: bolder
            - font-size: xxx-large
            - background: yellow

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            template: sidebar

      #################################################
      #                                               #
      #                    office                     #
      #                                               #
      #################################################

      - type: grid
        title: Office
        view_layout:
          grid-area: office
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.office_lamp
            name: Lamp
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: light.office #hue_group
            name: Ceiling
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: switch.strip_lights #hue_group
            name: Strip Lights
            template:
              - base
              - icon_hue

          - type: custom:button-card
            entity: light.keylights #hue_group
            name: Keylights
            template:
              - light
              - icon_keylight

      #################################################
      #                                               #
      #                    Scenes                     #
      #                                               #
      #################################################

      - type: grid
        title: Scenes
        view_layout:
          grid-area: scenes
        columns: 2
        cards:
          - type: custom:button-card
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.office_white
            variables:
              state: >
                [[[ return (states["input_select.scene_status"].state === states["scene.office_white"].attributes.friendly_name); ]]]
              consider_on: >
                [[[ return (states["input_select.scene_status"].state === states["scene.office_white"].attributes.friendly_name); ]]]
            name: Bright
            template:
              - scene
              - icon_hue
            state_display: >
              [[[ if (states["input_select.scene_status"].state === states["scene.office_white"].attributes.friendly_name) return "Active"; ]]]

          - type: custom:button-card
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.office_low_light
            variables:
              consider_on: >
                [[[ return (states["input_select.scene_status"].state === states["scene.office_low_light"].attributes.friendly_name); ]]]
            name: Low Light
            template:
              - scene
              - icon_hue
            state_display: >
              [[[ if (states["input_select.scene_status"].state === states["scene.office_low_light"].attributes.friendly_name) return "Active"; ]]]

          - type: custom:button-card
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.stream_time
            variables:
              consider_on: >
                [[[ return (states["input_select.scene_status"].state === states["scene.stream_time"].attributes.friendly_name); ]]]
            name: Stream
            template:
              - scene
              - icon_hue
            state_display: >
              [[[ if (states["input_select.scene_status"].state === states["scene.stream_time"].attributes.friendly_name) return "Active"; ]]]

          - type: custom:button-card
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.office_off
            variables:
              consider_on: >
                [[[ return (states["input_select.scene_status"].state === states["scene.office_off"].attributes.friendly_name); ]]]
            name: All off
            template:
              - scene
              - icon_hue
            state_display: >
              [[[ if (states["input_select.scene_status"].state === states["scene.office_off"].attributes.friendly_name) return "Active"; ]]]


      #################################################
      #                                               #
      #                     home                     #
      #                                               #
      #################################################

      - type: grid
        title: Home
        view_layout:
          grid-area: home
        columns: 2
        cards:
          - type: custom:button-card
            entity: person.trent
            name: Trent
            triggers_update:
              - sensor.trent_last_changed
            tap_action: !include popup/home_trent.yaml
            hold_action:
              action: none
            variables:
              retain: sensor.trent_last_changed
            template: person

          - type: custom:button-card
            entity: person.caitlyn
            name: Caitlyn
            triggers_update:
              - sensor.caitlyn_last_changed
            tap_action: !include popup/home_caitlyn.yaml
            hold_action:
              action: none
            variables:
              retain: sensor.caitlyn_last_changed
            template: person
          - type: custom:button-card
            entity: switch.laundry_light
            name: Laundry
            template:
              - base
              - icon_hue

          # - type: custom:button-card
          #   entity: script.home_leave
          #   name: St√§ng allt
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_away

          # - type: custom:button-card
          #   entity: script.home_arrive
          #   name: Home
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_home
      #################################################
      #                                               #
      #                    Music                     #
      #                                               #
      #################################################

      - type: grid
        title: Music
        view_layout:
          grid-area: music
        columns: 1
        cards:
          - type: media-control
            entity: media_player.spotify_trent_braidner #hue_group
        style:
          top: 64.5%
          left: 55.18%
          width:
            100%
            # name: Badrum
            # template:
            #   - light
            #   - icon_bathroom

      #################################################
      #                                               #
      #                     other                     #
      #                                               #
      #################################################

      - type: grid 
        title: Other
        view_layout:
          grid-area: other
        columns: 2
        cards:
          - type: custom:button-card
            entity: cover.office_blinds
            name: Blinds
            template:
              - base_cover
              - cover_circle
              - icon_cover
            variables:
              circle_input: >
                [[[
                  if (entity) {
                    let real_position = entity.attributes.current_position;
                    return (real_position < 0) ? 0 : (real_position > 100) ? 100 : real_position;
                  }
                ]]]
              close_position: 0
              quarter1_position: 25
              middle_position: 50
              quarter3_position: 75
          - type: custom:button-card
            entity: sensor.trentau
            name: Twitch
            template:
              - base
          - type: custom:button-card
            entity: switch.speakers_outlet
            name: Speakers
            template:
              - base
              - icon_monitors              

      #################################################
      #                                               #
      #                     house                     #
      #                                               #
      #################################################

      - type: grid 
        title: House
        view_layout:
          grid-area: house
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.kitchen_light_switch #hue_group
            name: Kitchen
            template:
              - light
              - icon_hue           


      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      # - type: horizontal-stack
      #   view_layout:
      #     grid-area: footer
      #   cards:

      #     # - type: custom:button-card
      #     #   name: >
      #     #     <ha-icon icon="mdi:nas"></ha-icon> NAS
      #     #   tap_action:
      #     #     !include popup/footer/nas.yaml
      #     #   variables:
      #     #     notify: >
      #     #       [[[
      #     #         let status = states['sensor.nas_volume_1_status'],
      #     #           security = states['binary_sensor.nas_security_status'],
      #     #           disk_use = states['sensor.disk_use_percent'],
      #     #           nas_update = states['binary_sensor.nas_update_available'];
      #     #         if (status && security && disk_use && nas_update) {
      #     #           return nas_update.state === 'on'
      #     #             ? 1
      #     #             : status.state === 'background_scrubbing' ||
      #     #               security.state === 'on' ||
      #     #               parseFloat(disk_use.state) >= 85;
      #     #         }
      #     #       ]]]
      #     #   template: footer

      #     - type: custom:button-card
      #       name: >
      #         <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Update
      #       tap_action:
      #         !include popup/footer/updater.yaml
      #       variables:
      #         notify: >
      #           [[[
      #             let hass_installed = hass.config.version,
      #               hass_version_latest = states['sensor.hass_version_latest'],
      #               hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
      #               hacs = states['sensor.hacs'];
      #             if (hass_version_latest && hass_version_latest.state.includes('.')
      #               && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
      #               && hacs && Number.isInteger(parseInt(hacs.state))) {
      #               let hass_latest = hass_installed.includes('b')
      #                   ? hass_version_latest_beta.state
      #                   : hass_version_latest.state,
      #                 hass_count = hass_installed !== hass_latest ? 1 : 0;
      #               return hass_count + parseInt(hacs.state);
      #             }
      #             return 0;
      #           ]]]
      #       template: footer

      #     - type: custom:button-card
      #       name: >
      #         <ha-icon icon="mdi:robot-vacuum-variant"></ha-icon> Vacuum
      #       tap_action:
      #         !include popup/footer/vacuum.yaml
      #       variables:
      #         notify: >
      #           [[[
      #             let last_clean = states['sensor.morty_last_clean_end'],
      #               week_ms = 6048e5;
      #             if (last_clean) {
      #               return (Date.now() - Date.parse(last_clean.state)) > week_ms;
      #             }
      #           ]]]
      #       template: footer

      #     - type: custom:button-card
      #       name: >
      #         <ha-icon icon="mdi:chart-line-variant"></ha-icon> Stats
      #       tap_action:
      #         !include popup/footer/history.yaml
      #       template: footer

      #     # - type: custom:button-card
      #     #   name: >
      #     #     <ha-icon icon="mdi:tablet"></ha-icon> Platta
      #     #   tap_action:
      #     #     !include popup/footer/tablet.yaml
      #     #   variables:
      #     #     notify: >
      #     #       [[[
      #     #         let plugged_in = states['binary_sensor.galaxy_tab_a_plugged_in'];
      #     #         if (plugged_in) {
      #     #           return plugged_in.state === 'off';
      #     #         }
      #     #       ]]]
      #     #   template: footer

      #     # - type: custom:button-card
      #     #   name: >
      #     #     <ha-icon icon="mdi:router-wireless"></ha-icon> Router
      #     #   tap_action:
      #     #     !include popup/footer/router.yaml
      #     #   variables:
      #     #     notify: >
      #     #       [[[
      #     #         let internet = states['binary_sensor.template_udm_internet'],
      #     #           upgradable = states['binary_sensor.template_udm_upgradable'];
      #     #         if (internet && upgradable) {
      #     #           return upgradable.state === 'on'
      #     #             ? 1
      #     #             : internet.state === 'off';
      #     #         }
      #     #       ]]]
      #     #   template: footer

      #     # - type: custom:button-card
      #     #   name: >
      #     #     <ha-icon icon="mdi:raspberry-pi"></ha-icon> RPi
      #     #   tap_action:
      #     #     !include popup/footer/rpi.yaml
      #     #   variables:
      #     #     notify: >
      #     #       [[[
      #     #         let ping = states['binary_sensor.rpi_ping'];
      #     #         if (ping) {
      #     #           return ping.state === 'off';
      #     #         }
      #     #       ]]]
      #     #   template: footer
